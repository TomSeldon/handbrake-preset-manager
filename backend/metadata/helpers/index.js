'use strict';

var breeze = require('breeze-serverside'),
    dataTypeHelper = require('./data-type'),
    keyGen = breeze.AutoGeneratedKeyType.Identity,
    namespace = 'hpm.Model',
    metadataHelper = new breeze.config.MetadataHelper(namespace, keyGen);

/**
 * Configure Breeze with any specific settings we need.
 */
exports.configureBreeze = function()
{
    dataTypeHelper.registerDataTypes(breeze);
};

/**
 * @return {breeze.MetadataStore}
 */
exports.createMetadataStore = function()
{
    return new breeze.MetadataStore();
};

/**
 * @param {breeze.MetadataStore} store
 * @return {Function}
 */
exports.addTypeFactory = function(store)
{
    /**
     * @param {Object} type - Breeze entity definition
     */
    function addType(type) {
        metadataHelper.addTypeToStore(store, type);
    }

    return addType;
};

/**
 * Populates a metastore with the provided entity type
 * definitions.
 *
 * @param {breeze.MetadataStore} store
 * @param {Object} typeDefinitions
 */
exports.fillMetadataStore = function(store, typeDefinitions)
{
    var addType = exports.addTypeFactory(store);

    for (var typeName in typeDefinitions) {
        if (typeDefinitions.hasOwnProperty(typeName)) {
            var typeDefinition = typeDefinitions[typeName];

            addType(typeDefinition);
        }
    }
};
