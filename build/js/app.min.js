(function(){'use strict';var hpm={categories:{}};hpm.categories.list={};hpm.categories.list.Ctrl=function(a,b){this.categoryRepository_=a;this.dataContext_=this.categoryRepository_.getDataContext();this.logger=b;this.categoryList=this.getCategories();this.isLoading=!0};hpm.categories.list.Ctrl.$inject=["CategoryRepository","logger"];
hpm.categories.list.Ctrl.prototype.getCategories=function(){this.isLoading=!0;this.categoryRepository_.getAllCategories().then(function(a){this.categoryList=a.results}.bind(this),function(a){this.logger.error(a,"Unable to get categories")}.bind(this)).then(function(){this.isLoading=!1}.bind(this))};hpm.categories.list.Ctrl.prototype.hasChanges=function(){return this.dataContext_.hasChanges()};
hpm.categories.list.Ctrl.prototype.cancelChanges=function(a){var b=a.entityAspect;b.entityState.isAdded()||b.rejectChanges();a.beingEdited=!1};hpm.categories.list.Ctrl.prototype.cancelAllChanges=function(){this.dataContext_.rejectChanges();this.getCategories()};hpm.categories.list.Ctrl.prototype.saveChanges=function(){this.isLoading=!0;this.dataContext_.saveChanges().then(this.saveSuccess.bind(this),this.saveFail.bind(this)).then(function(){this.isLoading=!1}.bind(this))};
hpm.categories.list.Ctrl.prototype.saveSuccess=function(a){a=parseInt(a.entities.length,10);this.logger.success(a+" entities were affected","Saved successfully");this.markAllNotEditing()};hpm.categories.list.Ctrl.prototype.saveFail=function(a){this.logger.error("Unable to save changes. See validation errors for details.","Save failed")};hpm.categories.list.Ctrl.prototype.markAllNotEditing=function(){this.categoryList.forEach(function(a){a.beingEdited=!1})};
hpm.categories.list.Ctrl.prototype.changeEvent=function(a,b){13===event.which&&(b.beingEdited=!1)};hpm.categories.list.Ctrl.prototype.edit=function(a){a.beingEdited=!0};hpm.categories.list.Ctrl.prototype.canEdit=function(a){return!a.entityAspect.isBeingSaved};hpm.categories.list.Ctrl.prototype.remove=function(a){var b=this.categoryList.indexOf(a);a.entityAspect.setDeleted();this.categoryList.splice(b,1)};
hpm.categories.list.Ctrl.prototype.createCategory=function(){var a=this.categoryRepository_.createCategory();a.beingEdited=!0;this.categoryList.splice(0,0,a)};hpm.presets={};hpm.presets.create={};hpm.presets.create.Ctrl=function(a,b,c){this.scope=a;this.presetRepository_=b;this.dataContext_=this.presetRepository_.getDataContext();this.categories=c;this.preset=this.presetRepository_.createPreset();this.scope.$on("$destroy",this._destroy.bind(this))};hpm.presets.create.Ctrl.$inject=["$scope","PresetRepository","categories"];hpm.presets.create.Ctrl.prototype._destroy=function(){"Added"===this.preset.entityAspect.entityState.name===!0&&this.preset.entityAspect.setDeleted()};
hpm.presets.create.Ctrl.prototype.save=function(){this.dataContext_.saveChanges().then(null,function(a){console.error(a)})};hpm.presets.create.Ctrl.prototype.hasChanges=function(){return this.dataContext_.hasChanges()};hpm.presets.detail={};hpm.presets.detail.Ctrl=function(a){this.id=a.id};hpm.presets.detail.Ctrl.$inject=["$stateParams"];hpm.presets.detail.Ctrl.prototype.getId=function(){return this.id};hpm.presets.detail.module=angular.module("presets.detail",["ui.router"]);hpm.presets.detail.module.configuration=function(a){a.state("presets.detail",{url:"/{id:[0-9]{1,4}}",templateUrl:"/states/presets/detail/detail.jade",controller:"PresetDetailCtrl as presetDetail"})};hpm.presets.detail.module.configuration.$inject=["$stateProvider"];hpm.presets.detail.module.config(hpm.presets.detail.module.configuration).controller("PresetDetailCtrl",hpm.presets.detail.Ctrl);hpm.presets.list={};hpm.presets.list.Ctrl=function(a,b){this.presetRepository_=a;this.dataContext=this.presetRepository_.getDataContext();this.logger=b;this.presetsList=this.getPresets();this.isLoading=!0};hpm.presets.list.Ctrl.$inject=["PresetRepository","logger"];
hpm.presets.list.Ctrl.prototype.getPresets=function(){this.isLoading=!0;this.presetRepository_.getAllPresets().then(function(a){this.presetsList=a.results}.bind(this),function(a){this.logger.error(a,"Unable to get presets")}.bind(this)).then(function(){this.isLoading=!1}.bind(this))};hpm.presets.create.advanced={};hpm.presets.create.advanced.module=angular.module("hpm.presets.create.advanced",["ui.router"]);hpm.presets.create.advanced.module.configuration=function(a){a.state("presets.create.advanced",{url:"/advanced",views:{"":{templateUrl:"/states/presets/create/advanced/advanced.jade"}}})};hpm.presets.create.advanced.module.configuration.$inject=["$stateProvider"];hpm.presets.create.advanced.module.config(hpm.presets.create.advanced.module.configuration);hpm.presets.create.audio={};hpm.presets.create.audio.module=angular.module("hpm.presets.create.audio",["ui.router"]);hpm.presets.create.audio.module.configuration=function(a){a.state("presets.create.audio",{url:"/audio",views:{"":{templateUrl:"/states/presets/create/audio/audio.jade"}}})};hpm.presets.create.audio.module.configuration.$inject=["$stateProvider"];hpm.presets.create.audio.module.config(hpm.presets.create.audio.module.configuration);hpm.presets.create.basic={};hpm.presets.create.basic.module=angular.module("hpm.presets.create.basic",["ui.router"]);hpm.presets.create.basic.module.configuration=function(a){a.state("presets.create.basic",{url:"/basic",views:{"":{templateUrl:"/states/presets/create/basic/basic.jade"}}})};hpm.presets.create.basic.module.configuration.$inject=["$stateProvider"];hpm.presets.create.basic.module.config(hpm.presets.create.basic.module.configuration);hpm.presets.create.output={};hpm.presets.create.output.module=angular.module("hpm.presets.create.output",["ui.router"]);hpm.presets.create.output.module.configuration=function(a){a.state("presets.create.output",{url:"/output",views:{"":{templateUrl:"/states/presets/create/output/output.jade"}}})};hpm.presets.create.output.module.configuration.$inject=["$stateProvider"];hpm.presets.create.output.module.config(hpm.presets.create.output.module.configuration);hpm.presets.create.video={};hpm.presets.create.video.module=angular.module("hpm.presets.create.video",["ui.router"]);hpm.presets.create.video.module.configuration=function(a){a.state("presets.create.video",{url:"/video",views:{"":{templateUrl:"/states/presets/create/video/video.jade"}}})};hpm.presets.create.video.module.configuration.$inject=["$stateProvider"];hpm.presets.create.video.module.config(hpm.presets.create.video.module.configuration);hpm.presets.create.module=angular.module("hpm.presets.create",["ui.router",hpm.presets.create.advanced.module.name,hpm.presets.create.audio.module.name,hpm.presets.create.basic.module.name,hpm.presets.create.output.module.name,hpm.presets.create.video.module.name]);hpm.presets.create.module.categoriesResolveFn=function(a){return a.getAllCategories()};hpm.presets.create.module.categoriesResolveFn.$inject=["CategoryRepository"];
hpm.presets.create.module.configuration=function(a,b){b.when("/presets/create","/presets/create/basic");a.state("presets.create",{url:"/create",views:{"":{templateUrl:"/states/presets/create/create.jade",controller:"PresetsCreateCtrl as presetCreate"},"menu@presets.create":{templateUrl:"/states/presets/create/menu.jade"}},resolve:{categories:hpm.presets.create.module.categoriesResolveFn}})};hpm.presets.create.module.configuration.$inject=["$stateProvider","$urlRouterProvider"];
hpm.presets.create.module.controller("PresetsCreateCtrl",hpm.presets.create.Ctrl).config(hpm.presets.create.module.configuration);hpm.config={};hpm.config.Service=function(a){this.toastr={timeOut:5E3,extendedTimeOut:3E3,positionClass:"toast-bottom-right",closeButton:!0,closeHtml:'<i class="black close icon"></i>',toastClass:"toast ui segment",titleClass:"ui tiny header",iconClasses:{success:"green",info:"teal",error:"red",warning:"orange tertiary"}};this.breeze={server:"Express",serviceRoot:a.location.protocol+"//"+a.location.host+"/",serviceName:"breeze/hpm"}};hpm.config.Service.$inject=["$window"];hpm.config.module=angular.module("hpm.config",[]);hpm.config.module.service("config",hpm.config.Service);hpm.breeze={};hpm.breeze.module=angular.module("hpm.breeze",["breeze.angular",hpm.config.module.name]);hpm.breeze.module.runFn=function(a){a.config.initializeAdapterInstance("dataService","mongo",!0)};hpm.breeze.module.runFn.$inject=["breeze"];hpm.breeze.module.run(hpm.breeze.module.runFn);hpm.logger={};hpm.logger.Service=function(a,b,c){this.toastr=c;this.$log=b};hpm.logger.Service.$inject=["$window","$log","toastr"];hpm.logger.Service.prototype.error=function(a,b){this.toastr.error(a,b);b&&this.$log.error(b);this.$log.error(a)};hpm.logger.Service.prototype.warning=function(a,b){this.toastr.warning(a,b);b&&this.$log.warning(b);this.$log.warning(a)};hpm.logger.Service.prototype.info=function(a,b){this.toastr.info(a,b);b&&this.$log.info(b);this.$log.info(a)};
hpm.logger.Service.prototype.success=function(a,b){this.toastr.success(a,b);b&&this.$log.info(b);this.$log.info(a)};hpm.logger.Service.prototype.log=function(a){this.$log.log(a)};hpm.logger.module=angular.module("logger",["toastr"]);hpm.logger.module.configuration=function(){};hpm.logger.module.config(hpm.logger.module.configuration).service("logger",hpm.logger.Service);hpm.debug={};hpm.debug.state={};hpm.debug.state.Service=function(a,b){this.rootScope=a;this.logger=b};hpm.debug.state.Service.$inject=["$rootScope","$log"];
hpm.debug.state.Service.prototype.start=function(){this.rootScope.$on("$stateChangeStart",this.stateChangeStart.bind(this));this.rootScope.$on("$stateChangeError",this.stateChangeError.bind(this));this.rootScope.$on("$stateChangeSuccess",this.stateChangeSuccess.bind(this));this.rootScope.$on("$viewContentLoaded",this.viewContentLoaded.bind(this));this.rootScope.$on("$stateNotFound",this.stateNotFound.bind(this))};
hpm.debug.state.Service.prototype.stateChangeStart=function(a,b,c){this.logger.log("$stateChangeStart to "+b.to+"- fired when the transition begins. toState,toParams : \n",b,c)};hpm.debug.state.Service.prototype.stateChangeError=function(){this.logger.error("$stateChangeError - fired when an error occurs during transition.");this.logger.error(arguments)};hpm.debug.state.Service.prototype.stateChangeSuccess=function(a,b){this.logger.info("$stateChangeSuccess "+b.name+" - fired once the state transition is complete.")};
hpm.debug.state.Service.prototype.viewContentLoaded=function(a){this.logger.log("$viewContentLoaded - fired after dom rendered",a)};hpm.debug.state.Service.prototype.stateNotFound=function(a,b,c,d){this.logger.error("$stateNotFound "+b.to+" - fired when a state cannot be found by its name.");this.logger.error(b,c,d)};hpm.debug.state.module=angular.module("hpm.debug.state",[]);hpm.DEBUG_UI_STATE=!1;hpm.debug.state.module.service("StateDebugger",hpm.debug.state.Service);hpm.debug.state.module.runFn=function(a){!0===hpm.DEBUG_UI_STATE&&a.start()};hpm.debug.state.module.runFn.$inject=["StateDebugger"];hpm.debug.state.module.run(hpm.debug.state.module.runFn);var EntityManagerFactory=function(a,b){this.EntityManager_=a.EntityManager;this.store_=new a.MetadataStore;this.config_=b;this.store_.fetchMetadata(this.config_.breeze.serviceName)};EntityManagerFactory.$inject=["breeze","config"];EntityManagerFactory.prototype.createManager=function(){return new this.EntityManager_({serviceName:this.config_.breeze.serviceName,metadataStore:this.store_})};hpm.EntityManagerFactory=EntityManagerFactory;hpm.entityManager={};hpm.entityManager.module=angular.module("hpm.entityManager",[hpm.breeze.module.name,hpm.config.module.name]).service("EntityManagerFactory",hpm.EntityManagerFactory);var EntityQueryFactory=function(a){this.breeze_=a};EntityQueryFactory.$inject=["breeze"];EntityQueryFactory.prototype.createQuery=function(){return this.breeze_.EntityQuery};hpm.EntityQueryFactory=EntityQueryFactory;hpm.entityQuery={};hpm.entityQuery.module=angular.module("hpm.entityQuery",[hpm.breeze.module.name]).service("EntityQueryFactory",hpm.EntityQueryFactory);hpm.DataFacade={};var DataFacade=function(a,b){this.manager_=a.createManager();this.entityQueryFactory_=b};DataFacade.$inject=["EntityManagerFactory","EntityQueryFactory"];DataFacade.prototype.createEntity=function(a){return this.manager_.createEntity(a)};DataFacade.prototype.createQuery=function(){return this.entityQueryFactory_.createQuery()};DataFacade.prototype.executeQuery=function(a){return this.manager_.executeQuery(a)};DataFacade.prototype.hasChanges=function(){return this.manager_.hasChanges()};
DataFacade.prototype.saveChanges=function(){return this.manager_.saveChanges()};DataFacade.prototype.rejectChanges=function(){return this.manager_.rejectChanges()};hpm.DataFacade.Service=DataFacade;hpm.DataFacade.module=angular.module("hpm.DataFacade",[hpm.entityManager.module.name,hpm.entityQuery.module.name]);hpm.DataFacade.module.service("DataFacade",hpm.DataFacade.Service);hpm.ui={};hpm.ui.accordion={};hpm.ui.accordion.Directive={};hpm.ui.accordion.Directive=function(){this.link=this.link.bind(this)};hpm.ui.accordion.Directive.prototype.link=function(a,b){this.initAccordion(b);a.$on("hpm.ui.accordion.item.last",function(){this.initAccordion(b)}.bind(this))};hpm.ui.accordion.Directive.prototype.initAccordion=function(a){a=angular.element(a);a.hasClass("ui")||a.addClass("ui");a.hasClass("accordion")||a.addClass("accordion");a.accordion()};
hpm.ui.accordion.Directive.factory=function(){return{link:(new hpm.ui.accordion.Directive).link,scope:!0}};hpm.ui.accordion.item={};hpm.ui.accordion.item.Directive={};hpm.ui.accordion.item.Directive=function(){};hpm.ui.accordion.item.Directive.prototype.link=function(a){a.$last&&a.$emit("hpm.ui.accordion.item.last")};hpm.ui.accordion.item.Directive.factory=function(){return{link:(new hpm.ui.accordion.item.Directive).link}};hpm.ui.accordion.module=angular.module("hpm.ui.accordion",[]);hpm.ui.accordion.module.directive("uiAccordion",hpm.ui.accordion.Directive.factory);hpm.ui.accordion.module.directive("uiAccordionItem",hpm.ui.accordion.item.Directive.factory);hpm.ui.checkbox={};hpm.ui.checkbox.Directive={};hpm.ui.checkbox.Directive=function(){};hpm.ui.checkbox.Directive.prototype.link=function(a,b){angular.element(b).checkbox()};hpm.ui.checkbox.Directive.prototype.link.$inject=["scope","element"];hpm.ui.checkbox.Directive.factory=function(){return{link:(new hpm.ui.checkbox.Directive).link}};hpm.ui.checkbox.module=angular.module("hpm.ui.checkbox",[]);hpm.ui.checkbox.module.directive("uiCheckbox",hpm.ui.checkbox.Directive.factory);hpm.ui.popup={};hpm.ui.popup.Directive={};hpm.ui.popup.Directive=function(){};hpm.ui.popup.Directive.prototype.link=function(a,b){angular.element(b).popup()};hpm.ui.popup.Directive.prototype.link.$inject=["scope","element"];hpm.ui.popup.Directive.factory=function(){return{link:(new hpm.ui.popup.Directive).link}};hpm.ui.popup.module=angular.module("hpm.ui.popup",[]);hpm.ui.popup.module.directive("uiPopup",hpm.ui.popup.Directive.factory);hpm.ui.module=angular.module("hpm.ui",[hpm.ui.accordion.module.name,hpm.ui.checkbox.module.name,hpm.ui.popup.module.name]);hpm.category={};var CategoryRepository=function(a){this.data_=a};CategoryRepository.$inject=["DataFacade"];CategoryRepository.ENTITY_NAME="Category";CategoryRepository.ENTITY_NAME_PLURAL="Categories";CategoryRepository.prototype.getDataContext=function(){return this.data_};CategoryRepository.prototype.createCategory=function(){return this.data_.createEntity(CategoryRepository.ENTITY_NAME)};
CategoryRepository.prototype.getAllCategories=function(){var a=this.data_.createQuery().from(CategoryRepository.ENTITY_NAME_PLURAL);return this.data_.executeQuery(a)};CategoryRepository.prototype.getCategory=function(a){a=this.data_.createQuery().from(CategoryRepository.ENTITY_NAME_PLURAL).where("id_","eq",a);return this.data_.executeQuery(a)};CategoryRepository.prototype.getCategories=function(a){a.from(CategoryRepository.ENTITY_NAME_PLURAL);return this.data_.executeQuery(a)};
hpm.category.Repository=CategoryRepository;hpm.category.module=angular.module("hpm.category",[hpm.DataFacade.module.name]).service("CategoryRepository",hpm.category.Repository);hpm.preset={};var PresetRepository=function(a){this.data_=a};PresetRepository.$inject=["DataFacade"];PresetRepository.ENTITY_NAME="Preset";PresetRepository.ENTITY_NAME_PLURAL="Presets";PresetRepository.prototype.getDataContext=function(){return this.data_};PresetRepository.prototype.createPreset=function(){return this.data_.createEntity(PresetRepository.ENTITY_NAME)};PresetRepository.prototype.getAllPresets=function(){var a=this.data_.createQuery().from(PresetRepository.ENTITY_NAME_PLURAL);return this.data_.executeQuery(a)};
PresetRepository.prototype.getPreset=function(a){a=this.data_.createQuery().from(PresetRepository.ENTITY_NAME_PLURAL).where("id_","eq",a);return this.data_.executeQuery(a)};PresetRepository.prototype.getPresets=function(a){a.from(PresetRepository.ENTITY_NAME_PLURAL);return this.data_.executeQuery(a)};hpm.preset.Repository=PresetRepository;hpm.preset.module=angular.module("hpm.preset",[hpm.DataFacade.module.name]).service("PresetRepository",hpm.preset.Repository);hpm.data={};hpm.data.module=angular.module("hpm.data",[hpm.breeze.module.name,hpm.category.module.name,hpm.preset.module.name]);hpm.categories.list.module=angular.module("categories.list",["ui.router",hpm.data.module.name]);hpm.categories.list.module.configuration=function(a){a.state("categories.list",{url:"",views:{"":{templateUrl:"/states/categories/list/list.jade",controller:"CategoriesListCtrl as categories"},"tabledata@categories.list":{templateUrl:"/states/categories/list/table.jade"},"menu@categories.list":{templateUrl:"/states/categories/list/toolbar.jade"}}})};hpm.categories.list.module.configuration.$inject=["$stateProvider"];
hpm.categories.list.module.config(hpm.categories.list.module.configuration).controller("CategoriesListCtrl",hpm.categories.list.Ctrl);hpm.categories.module=angular.module("categories",["ui.router",hpm.categories.list.module.name]);hpm.categories.module.configuration=function(a){a.state("categories",{"abstract":!0,url:"/categories",templateUrl:"/states/categories/categories.jade"})};hpm.categories.module.configuration.$inject=["$stateProvider"];hpm.categories.module.config(hpm.categories.module.configuration);hpm.presets.list.module=angular.module("presets.list",["ui.router",hpm.data.module.name]);hpm.presets.list.module.configuration=function(a){a.state("presets.list",{url:"",views:{"":{templateUrl:"/states/presets/list/list.jade",controller:"PresetsListCtrl as presets"},"tabledata@presets.list":{templateUrl:"/states/presets/list/table.jade"},"menu@presets.list":{templateUrl:"/states/presets/list/toolbar.jade"}}})};hpm.presets.list.module.configuration.$inject=["$stateProvider"];
hpm.presets.list.module.config(hpm.presets.list.module.configuration).controller("PresetsListCtrl",hpm.presets.list.Ctrl);hpm.presets.module=angular.module("presets",["ui.router",hpm.presets.create.module.name,hpm.presets.detail.module.name,hpm.presets.list.module.name]);hpm.presets.module.configuration=function(a){a.state("presets",{"abstract":!0,url:"/presets",templateUrl:"/states/presets/presets.jade"})};hpm.presets.module.configuration.$inject=["$stateProvider"];hpm.presets.module.config(hpm.presets.module.configuration);angular.module("hpm",["ui.router","breeze.directives","toastr",hpm.config.module.name,hpm.data.module.name,hpm.logger.module.name,hpm.debug.state.module.name,hpm.ui.module.name,hpm.categories.module.name,hpm.presets.module.name]).run(toastrConfig);function toastrConfig(a,b){angular.extend(b,a.toastr)}toastrConfig.$inject=["config","toastrConfig"];})()//# sourceMappingURL=/assets/js/app.min.js.map
